name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint & Types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - run: python -m pip install -U pip ruff mypy
      - run: ruff format --check .
      - run: ruff check .
      - run: |
          python -m pip install -e .[test]
          mypy src/decision_security

  test:
    name: Tests (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9","3.10","3.11","3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: ${{ matrix.python-version }}, cache: "pip" }
      - run: |
          python -m pip install -U pip
          python -m pip install -e .[test]
      - run: |
          pytest -q --maxfail=1 --disable-warnings \
                 --cov=decision_security --cov-report=xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.12", cache: "pip" }
      - run: |
          python -m pip install -U pip build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
